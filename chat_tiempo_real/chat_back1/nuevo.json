Firestore {
    _settings: {
      credentials: {
        private_key: '-----BEGIN PRIVATE KEY-----\n' +
          'MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC2zqXfNvKDN5Fd\n' +        
          'xrvlDgyerDTklngPpJ45EjMHtrcT3G2X3nrZoq3GEGP3VVa9E0vbwwiwHh6DF0mb\n' +        
          's0ADT8rxvUvO9Tigfz66J9QOCPaBLB1CqQGS0BEmLa5ipQ+te08cZYH2g3v2U9Oc\n' +        
          'Frv8go/HCGjqORgOyQJV7IjuVyhcaJf6i08RN2pwJUhoDJqUVEIlI3DuZV4lSS5P\n' +        
          'rTWxMSqVGSoXLKIDRQHFg8zEA7zvw9iNpn9XTBNNmCMW/RONO/aqCXvfXSr1bzGI\n' +        
          'wjHITOAkNaFoz740tcVvLM5XOgqnAZ5mQq954q0NkGDOSFA8E8bvZL2w81aBnSAe\n' +        
          '5sIu7MJ9AgMBAAECggEACjjsiBqhvYowMAsCq0iZlo7hJ04tuQw2x9C3d001mB/5\n' +        
          'peYsPvrMlliIyoYkY07OrWOO2xBYGvMEq/b+U6EU42c3M8O9LqZm6tB62G0SYb9G\n' +        
          'hJmAS8YkS1r/FyeNRKFyV09q0M7h8fCWkvIngXOImDPlcAGQ0ZTWc1kWgCNyD5a2\n' +        
          'Offh4+ANdaacqNZw1mwIKnduoPPFJJjRGdw2m1KmXRzIw4KmpdUEwGBslhCYdcJn\n' +        
          'WwNMWXz90HBzAIQAZrb9KXJJ0PFxmgQv5DO5VoV0x35/017YZ9g0KQVtNJcyL2mL\n' +        
          '526FjFvwb7VQXjLfsoK0JGsj4FuAw2R5zTxXszOL6QKBgQD8yBakUNpPjMuQeD2S\n' +        
          'KAXxNZV/xmUHnZ5KF+u9lr4lPECY1f5fhtn9tadgrhYNjgwg+Il4rvP8gJc2uZkj\n' +        
          'PwVPTk2dsEynNQzB3+DsJ2zdyQP/sY8p4S7V2L5ohRLSn3JZ8dG8dYHOQreDAsZH\n' +        
          'X1IhT3niJOXNJSlQu3G11ScBuQKBgQC5InyAKDBxymPO7Cbc6cYpyEWVVyAZCDzo\n' +        
          'rRb0xiJcULcLuWgWnlIkSi1r3AGXiVWz9LLkMv/S8Rme/FgxAsK4lQAvVr3ExYQh\n' +        
          'SlvG4J1G55UVG3/QRAvwW5cOB6JEH9Flz95lQVzH1bWjB1++Q/26kpKptLd8D6Xd\n' +        
          'ah5GlsX45QKBgQCq0ox6fikJmRv3hUoWevWJC6z7rBaaDunpKEEm3behchY1Mme0\n' +        
          'Jm0qBpgVvY8pmdSYc1xzMcev2zZUxRe3ud7cuQ26gmlKlY8JdUGKVRo8xprtMBCP\n' +        
          'PJ1p5g7GkyclLpsYLVKPCNmviWZ6ImXb1Y6q9AppyIWDHJnO9NzjBChYAQKBgQCQ\n' +        
          'zn2tTEIgLxsEVchMEPpz4fczSXOMwNnLcN+802E67dNO81WMI4fCZNbEP9Bq8/u6\n' +        
          'B1MJlS5ukzDkHyLoKu2drMX5QRKr34Zq95tzomrCdA8y9FBz2VWxSiKL0cLFIFIM\n' +        
          'HZwpfQeSMwGgo/rqeonyrgTTgsvl2ON2nTNTKUluVQKBgFGBWY5Bx1yjW83XQ9m+\n' +        
          'HBGz4i7I9UsxhuanjC0jFNrguNzRlTGXYlhS/YjZyUFs/3rI5JQee3LArLuRRGKZ\n' +        
          '+UMI8g1c6bSKGcoK9qMfXFXYtXnp/XYIOZAi4Qqi1fxdKln8QevLEfnhzVpFFS+O\n' +        
          'AgbH3TJxnqg/1D56tAErdy5o\n' +
          '-----END PRIVATE KEY-----\n',
        client_email: 'firebase-adminsdk-fbsvc@backend-a9fde.iam.gserviceaccount.com'   
      },
      projectId: 'backend-a9fde',
      firebaseVersion: '13.1.0',
      firebaseAdminVersion: '13.1.0',
      preferRest: undefined,
      databaseId: '(default)',
      libName: 'gccl',
      libVersion: '7.11.0 fire/13.1.0 fire-admin/13.1.0',
      toJSON: [Function (anonymous)]
    },
    _settingsFrozen: true,
    _serializer: Serializer {
      createReference: [Function (anonymous)],
      createInteger: [Function (anonymous)],
      allowUndefined: false
    },
    _projectId: 'backend-a9fde',
    _databaseId: '(default)',
    registeredListenersCount: 0,
    bulkWritersCount: 0,
    _traceUtil: EnabledTraceUtil {
      tracerProvider: ProxyTracerProvider {},
      tracer: ProxyTracer {
        _provider: ProxyTracerProvider {},
        name: '@google-cloud/firestore',
        version: '7.11.0',
        options: undefined
      },
      settingsAttributes: {
        'otel.scope.name': '@google-cloud/firestore',
        'otel.scope.version': '7.11.0',
        'gcp.firestore.settings.project_id': 'backend-a9fde',
        'gcp.firestore.settings.database_id': '(default)',
        'gcp.firestore.settings.host': 'firestore.googleapis.com:443',
        'gcp.firestore.settings.max_idle_channels': 1,
        'gcp.firestore.settings.initial_retry_delay': '0.1s',
        'gcp.firestore.settings.initial_rpc_timeout': '60s',
        'gcp.firestore.settings.total_timeout': '600s',
        'gcp.firestore.settings.max_retry_delay': '60s',
        'gcp.firestore.settings.max_rpc_timeout': '60s',
        'gcp.firestore.settings.retry_delay_multiplier': '1.3',
        'gcp.firestore.settings.rpc_timeout_multiplier': '1'
      }
    },
    _backoffSettings: { initialDelayMs: 100, maxDelayMs: 60000, backoffFactor: 1.3 },   
    _clientPool: ClientPool {
      concurrentOperationLimit: 100,
      maxIdleClients: 1,
      clientFactory: [Function (anonymous)],
      clientDestructor: [Function (anonymous)],
      grpcEnabled: false,
      activeClients: Map(1) { [FirestoreClient] => [Object] },
      failedClients: Set(0) {},
      terminated: false,
      terminateDeferred: Deferred {
        resolve: [Function (anonymous)],
        reject: [Function (anonymous)],
        promise: [Promise]
      }
    },
    _gax: {
      GoogleAuth: [Getter],
      grpc: {
        credentials: [Object],
        Metadata: [Getter],
        logVerbosity: [Getter],
        status: [Getter],
        connectivityState: [Getter],
        propagate: [Getter],
        compressionAlgorithms: [Getter],
        Client: [Getter],
        loadPackageDefinition: [Getter],
        makeClientConstructor: [Getter],
        makeGenericClientConstructor: [Getter],
        Channel: [Getter],
        closeClient: [Function: closeClient],
        waitForClientReady: [Function: waitForClientReady],
        ChannelCredentials: [Getter],
        CallCredentials: [Getter],
        loadObject: [Function: loadObject],
        load: [Function: load],
        setLogger: [Function: setLogger],
        setLogVerbosity: [Function: setLogVerbosity],
        Server: [Getter],
        ServerCredentials: [Getter],
        getClientChannel: [Function: getClientChannel],
        StatusBuilder: [Getter],
        ListenerBuilder: [Getter],
        RequesterBuilder: [Getter],
        InterceptingCall: [Getter],
        InterceptorConfigurationError: [Getter],
        getChannelzServiceDefinition: [Getter],
        getChannelzHandlers: [Getter],
        addAdminServicesToServer: [Getter],
        ServerListenerBuilder: [Getter],
        ResponderBuilder: [Getter],
        ServerInterceptingCall: [Getter],
        experimental: [Object]
      },
      OngoingCall: [Getter],
      createApiCall: [Getter],
      BundleDescriptor: [Getter],
      LongrunningDescriptor: [Getter],
      PageDescriptor: [Getter],
      StreamDescriptor: [Getter],
      CallSettings: [Getter],
      constructSettings: [Getter],
      RetryOptions: [Getter],
      createRetryOptions: [Getter],
      createBundleOptions: [Getter],
      createBackoffSettings: [Getter],
      createDefaultBackoffSettings: [Getter],
      createMaxRetriesBackoffSettings: [Getter],
      GoogleError: [Getter],
      ClientStub: [Getter],
      GoogleProtoFilesRoot: [Getter],
      GrpcClient: [Getter],
      Operation: [Getter],
      operation: [Getter],
      PathTemplate: [Getter],
      Status: [Getter],
      StreamType: [Getter],
      routingHeader: { fromParams: [Function: fromParams] },
      operationsProtos: { google: [Object] },
      IamProtos: { google: [Object] },
      LocationProtos: { google: [Object] },
      OperationsClient: [Getter],
      IamClient: [Getter],
      LocationsClient: [Getter],
      createByteLengthFunction: [Function: createByteLengthFunction],
      version: '4.4.1',
      protobuf: {
        build: 'full',
        Writer: [Function],
        BufferWriter: [Function],
        Reader: [Function],
        BufferReader: [Function],
        util: [Object],
        rpc: [Object],
        roots: [Object],
        configure: [Function: configure],
        load: [Function: load],
        loadSync: [Function: loadSync],
        encoder: [Function: encoder],
        decoder: [Function: decoder],
        verifier: [Function: verifier],
        converter: [Object],
        ReflectionObject: [Function],
        Namespace: [Function],
        Root: [Function],
        Enum: [Function],
        Type: [Function],
        Field: [Function],
        OneOf: [Function],
        MapField: [Function],
        Service: [Function],
        Method: [Function],
        Message: [Function],
        wrappers: [Object],
        types: [Object],
        tokenize: [Function],
        parse: [Function],
        common: [Function],
        descriptor: [Namespace]
      },
      protobufMinimal: {
        build: 'full',
        Writer: [Function],
        BufferWriter: [Function],
        Reader: [Function],
        BufferReader: [Function],
        util: [Object],
        rpc: [Object],
        roots: [Object],
        configure: [Function: configure],
        load: [Function: load],
        loadSync: [Function: loadSync],
        encoder: [Function: encoder],
        decoder: [Function: decoder],
        verifier: [Function: verifier],
        converter: [Object],
        ReflectionObject: [Function],
        Namespace: [Function],
        Root: [Function],
        Enum: [Function],
        Type: [Function],
        Field: [Function],
        OneOf: [Function],
        MapField: [Function],
        Service: [Function],
        Method: [Function],
        Message: [Function],
        wrappers: [Object],
        types: [Object],
        tokenize: [Function],
        parse: [Function],
        common: [Function],
        descriptor: [Namespace]
      },
      fallback: <ref *1> {
        PathTemplate: [Getter],
        routingHeader: [Object],
        CallSettings: [Getter],
        constructSettings: [Getter],
        RetryOptions: [Getter],
        createDefaultBackoffSettings: [Getter],
        version: '4.4.1-fallback',
        BundleDescriptor: [Getter],
        LongrunningDescriptor: [Getter],
        PageDescriptor: [Getter],
        StreamDescriptor: [Getter],
        StreamType: [Getter],
        OperationsClient: [Getter],
        IamClient: [Getter],
        LocationsClient: [Getter],
        makeUUID: [Getter],
        defaultToObjectOptions: [Object],
        GrpcClient: [Function],
        operationsProtos: [Object],
        IamProtos: [Object],
        LocationProtos: [Object],
        protobuf: [Object],
        protobufMinimal: [Object],
        warn: [Getter],
        Operation: [Getter],
        operation: [Getter],
        GoogleError: [Getter],
        fallback: [Circular *1],
        lro: [Function: lro],
        createApiCall: [Function: createApiCall]
      },
      makeUUID: [Getter],
      ChannelCredentials: [Getter],
      warn: [Getter],
      serializer: { toProto3JSON: [Getter], fromProto3JSON: [Getter] },
      lro: [Function: lro] {
        SERVICE_ADDRESS: 'longrunning.googleapis.com',
        ALL_SCOPES: []
      }
    }
  }